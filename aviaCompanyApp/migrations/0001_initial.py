# Generated by Django 5.1.4 on 2024-12-15 12:24

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Airport',
            fields=[
                ('nearest_city', models.CharField()),
                ('name', models.CharField(max_length=50)),
                ('international_code', models.CharField(primary_key=True, serialize=False, validators=[django.core.validators.RegexValidator(regex='^[A-Z][A-Z][A-Z][A-Z]?$')])),
                ('status', models.CharField(choices=[('WR', 'Работает'), ('TN', 'Временно не работает'), ('CL', 'Закрыт')])),
            ],
        ),
        migrations.CreateModel(
            name='PassengerPlane',
            fields=[
                ('on_board_number', models.CharField(primary_key=True, serialize=False, validators=[django.core.validators.RegexValidator(regex='^[A-Z][A-Z]-\\d{4,5}$')])),
                ('manufacturer', models.CharField(max_length=60)),
                ('model', models.CharField(max_length=60)),
                ('load_capacity', models.IntegerField()),
                ('max_flight_range', models.IntegerField()),
                ('service_life', models.IntegerField()),
                ('status', models.CharField(choices=[('UR', 'В ремонте'), ('ACT', 'В работе')])),
            ],
        ),
        migrations.CreateModel(
            name='Pilot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=43)),
                ('surname', models.CharField(max_length=43)),
                ('middle_name', models.CharField(blank=True, max_length=43, null=True)),
                ('experience', models.IntegerField()),
                ('phone_num', models.CharField(validators=[django.core.validators.RegexValidator(message='Некорректный номер телефона', regex='^\\+?\\d{9,15}$')])),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('LS', 'Услуги по багажу'), ('FFS', 'Услуги питания'), ('ODF', 'Другие услуги во время полета'), ('OAF', 'Другие услуги до/после полета')])),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('price', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=43)),
                ('surname', models.CharField(max_length=43)),
                ('middle_name', models.CharField(blank=True, max_length=43, null=True)),
                ('phone_num', models.CharField(validators=[django.core.validators.RegexValidator(message='Некорректный номер телефона', regex='^\\+?\\d{9,15}$')])),
                ('position', models.CharField()),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('first_name', models.CharField(blank=True, max_length=43, null=True)),
                ('surname', models.CharField(blank=True, max_length=43, null=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone_num', models.CharField(blank=True, null=True, validators=[django.core.validators.RegexValidator(message='Некорректный номер телефона', regex='^\\+?\\d{9,15}$')])),
                ('miles_balance', models.IntegerField(default=0)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Airway',
            fields=[
                ('number', models.CharField(primary_key=True, serialize=False)),
                ('departure_time', models.TimeField()),
                ('flight_duration', models.DurationField()),
                ('departure_airport', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_dep_Airport', to='aviaCompanyApp.airport')),
                ('destination_airport', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_dest_Airport', to='aviaCompanyApp.airport')),
                ('plane', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='aviaCompanyApp.passengerplane')),
                ('pilots', models.ManyToManyField(to='aviaCompanyApp.pilot')),
                ('services', models.ManyToManyField(to='aviaCompanyApp.service')),
                ('staff', models.ManyToManyField(to='aviaCompanyApp.staff')),
            ],
        ),
        migrations.CreateModel(
            name='Doc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('PSP', 'Паспорт'), ('IPS', 'Заграничный паспорт')])),
                ('custom_name', models.CharField(max_length=40)),
                ('number', models.CharField(validators=[django.core.validators.RegexValidator(regex='^\\d{10}$')])),
                ('date_of_issue', models.DateField()),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('number', 'type', 'date_of_issue', 'custom_name')},
            },
        ),
        migrations.CreateModel(
            name='Flight',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slugField', models.SlugField(unique=True)),
                ('date_departure', models.DateField()),
                ('time_departure', models.TimeField(blank=True, null=True)),
                ('date_arrival', models.DateField(blank=True, null=True)),
                ('time_arrival', models.TimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('EXP', 'Ожидается'), ('CLD', 'Отменен'), ('PLD', 'Запланирован'), ('DLD', 'Задерживается'), ('IFL', 'В полете'), ('CTD', 'Выполнен')])),
                ('price', models.IntegerField()),
                ('airway', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='aviaCompanyApp.airway')),
            ],
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('booking_status', models.CharField(choices=[('NO', 'Не забронирован'), ('YES', 'Забронирован')])),
                ('price', models.IntegerField()),
                ('paid', models.BooleanField(default=False)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='aviaCompanyApp.doc')),
                ('flight', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='aviaCompanyApp.flight')),
                ('services', models.ManyToManyField(to='aviaCompanyApp.service')),
            ],
        ),
        migrations.CreateModel(
            name='FlightSeat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seat_num', models.CharField(validators=[django.core.validators.RegexValidator('^\\d\\d?[A-F]$')])),
                ('flight', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='aviaCompanyApp.flight')),
                ('ticket_num', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='aviaCompanyApp.ticket')),
            ],
        ),
        migrations.CreateModel(
            name='Weekday',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.CharField(choices=[('MON', 'Понедельник'), ('TUE', 'Вторник'), ('WED', 'Среда'), ('THU', 'Четверг'), ('FRI', 'Пятница'), ('SAT', 'Суббота'), ('SUN', 'Воскресенье')])),
                ('airway', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='aviaCompanyApp.airway')),
            ],
        ),
    ]
